name: Collect GitHub Analytics Data

on:
  # Run daily at 9 AM UTC
  schedule:
    - cron: '0 9 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      include_historical:
        description: 'Include historical data (14 days)'
        required: false
        default: 'false'
        type: boolean
      repository:
        description: 'Specific repository (owner/name) - leave empty for all'
        required: false
        type: string

jobs:
  collect-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Validate configuration
      env:
        GITHUB_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
      run: |
        cd scripts
        python collect_data.py --validate-only --log-level INFO
    
    - name: Collect analytics data
      env:
        GITHUB_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
      run: |
        cd scripts
        if [ "${{ github.event.inputs.repository }}" != "" ]; then
          echo "Collecting data for specific repository: ${{ github.event.inputs.repository }}"
          python collect_data.py \
            --repository "${{ github.event.inputs.repository }}" \
            --log-level INFO \
            ${{ github.event.inputs.include_historical == 'true' && '--include-historical' || '' }}
        else
          echo "Collecting data for all repositories"
          python collect_data.py \
            --log-level INFO \
            ${{ github.event.inputs.include_historical == 'true' && '--include-historical' || '' }}
        fi
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Check for data changes
      id: check_changes
      run: |
        if [ -d "data" ] && [ "$(ls -A data)" ]; then
          git add data/
          if git diff --staged --quiet; then
            echo "No data changes to commit"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Data changes detected"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "No data directory or empty"
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push data to data repository
      if: steps.check_changes.outputs.changes == 'true'
      env:
        DATA_REPO_TOKEN: ${{ secrets.DATA_REPO_TOKEN }}
        DATA_REPO_OWNER: ${{ vars.DATA_REPO_OWNER }}
        DATA_REPO_NAME: ${{ vars.DATA_REPO_NAME }}
      run: |
        # Clone the data repository
        git clone https://${DATA_REPO_TOKEN}@github.com/${DATA_REPO_OWNER}/${DATA_REPO_NAME}.git data-repo
        
        # Copy new data to data repository
        if [ -d "data" ]; then
          cp -r data/* data-repo/ 2>/dev/null || true
        fi
        
        # Commit and push to data repository
        cd data-repo
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit to data repository"
        else
          git commit -m "Update analytics data - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          git push
          echo "Data pushed to ${DATA_REPO_OWNER}/${DATA_REPO_NAME}"
        fi
    
    - name: Generate collection summary
      if: always()
      run: |
        echo "## Collection Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event.inputs.repository }}" != "" ]; then
          echo "- **Repository**: ${{ github.event.inputs.repository }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Scope**: All configured repositories" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ github.event.inputs.include_historical }}" == "true" ]; then
          echo "- **Historical Data**: Included" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "- **Data Changes**: ${{ steps.check_changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "scripts/collection.log" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Collection Log" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 scripts/collection.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Analytics collection failed!"
        echo "Check the workflow logs for details."
        echo "This could be due to:"
        echo "- Invalid GitHub token"
        echo "- Repository access issues"
        echo "- Network connectivity problems"
        echo "- Configuration errors"